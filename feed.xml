<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://blog.cmoo.rs/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.cmoo.rs/" rel="alternate" type="text/html" /><updated>2023-02-26T22:34:28+00:00</updated><id>https://blog.cmoo.rs/feed.xml</id><title type="html">blog.cmoo.rs</title><subtitle>I might post something other than school work here.</subtitle><entry><title type="html">Web Design Technologies - Module #7 Blog</title><link href="https://blog.cmoo.rs/jekyll/update/2023/02/26/web-design-technologies-assignment-7.html" rel="alternate" type="text/html" title="Web Design Technologies - Module #7 Blog" /><published>2023-02-26T17:45:00+00:00</published><updated>2023-02-26T17:45:00+00:00</updated><id>https://blog.cmoo.rs/jekyll/update/2023/02/26/web-design-technologies-assignment-7</id><content type="html" xml:base="https://blog.cmoo.rs/jekyll/update/2023/02/26/web-design-technologies-assignment-7.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In modules #6 and #7 we covered the basics of PHP, including what it is, how functions work, and how strings work in PHP.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Functions&lt;/em&gt; in PHP are blocks of code that perform specific tasks and can be called multiple times throughout a program, they can accept parameters as input, and may return a value as output.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Strings&lt;/em&gt; are sequences of characters which can be manipulated, and &lt;em&gt;String functions&lt;/em&gt; are built-in functions that can manipulate strings in various ways. Such as finding the length of a string, searching for a specific character or substring, replacing characters, and converting the case of characters.&lt;/p&gt;

&lt;h3 id=&quot;php-basics&quot;&gt;PHP Basics&lt;/h3&gt;
&lt;p&gt;PHP is an interpreted language executed on the server-side, where scripts are parsed at runtime rather than compiled beforehand. The source code is not visible to the client, and various built-in functions allow for fast development. PHP is compatible with many popular databases and is structurally similar to C/C++.&lt;/p&gt;

&lt;p&gt;PHP supports both procedural and object-oriented paradigms, and all PHP statements end with a semi-colon. All PHP scripts are enclosed in the reserved &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;?php&lt;/code&gt; tag. PHP variables must begin with a “$” sign and are case-sensitive, with certain variable names reserved by PHP, including form variables ($_POST, $_GET), server variables ($_SERVER), etc.&lt;/p&gt;

&lt;h4 id=&quot;the-echo-command&quot;&gt;The echo command&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo&lt;/code&gt; is a PHP command used to output the parameters passed to it to the client’s web-browser.&lt;/p&gt;

&lt;h4 id=&quot;arithemtic-operations&quot;&gt;Arithemtic Operations&lt;/h4&gt;
&lt;p&gt;Arithmetic operations are possible with PHP variables, including addition, subtraction, multiplication, and division.&lt;/p&gt;

&lt;h4 id=&quot;concatenation&quot;&gt;Concatenation&lt;/h4&gt;
&lt;p&gt;You can concatenate multiple strings using a period to join them into one. For example:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$example&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;string-escapes&quot;&gt;String escapes&lt;/h4&gt;
&lt;p&gt;To display double quotation marks within a string, use the \ [backslash] before the quotation marks to ignore and display them.&lt;/p&gt;

&lt;h4 id=&quot;control-structures&quot;&gt;Control Structures&lt;/h4&gt;
&lt;p&gt;Control structures within PHP include conditional (branching) structures (e.g. if/else) and repetition structures (e.g. while loops).&lt;/p&gt;

&lt;h4 id=&quot;functions&quot;&gt;Functions&lt;/h4&gt;
&lt;p&gt;Functions are defined as groups of statements that can be executed as a single unit. The syntax for defining a function is:&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name_of_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Functions must be defined before they can be called, and function headers are of a specific format that does not include a return type. Function names are not case-sensitive, and the function statements must be contained within the function braces&lt;/p&gt;

&lt;h3 id=&quot;string-functions&quot;&gt;String Functions&lt;/h3&gt;
&lt;p&gt;In PHP, string functions are used to manipulate strings, which are sequences of characters. There are various string functions available in PHP that can be used to manipulate strings. Some of the commonly used string functions include strlen(), which is used to find the length of a string; substr(), which is used to extract a portion of a string; str_replace(), which is used to replace a string with another string; and strtolower() and strtoupper(), which are used to convert a string to lowercase and uppercase, respectively.&lt;/p&gt;

&lt;p&gt;For example, strlen() can be used to find the length of a string as shown below:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;The length of the string is &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Output: The length of the string is 13.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;assignment&quot;&gt;Assignment&lt;/h3&gt;
&lt;p&gt;For this assignment I created a web form that lets you input a string and click a submit button. The application then uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strlen()&lt;/code&gt; string function to calculate the string’s length and return it back to the user. Here’s the code I used to accomplish this:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getStringLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Defaults to an empty string if 'string' is not defined&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getStringLength()&lt;/code&gt; is called referenced in the body:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Your String: &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php echo $string; ?&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Length of the string: &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php echo getStringLength($string); ?&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;get&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;New String:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;string&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;?php echo $string; ?&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Submit&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Introduction In modules #6 and #7 we covered the basics of PHP, including what it is, how functions work, and how strings work in PHP. Functions in PHP are blocks of code that perform specific tasks and can be called multiple times throughout a program, they can accept parameters as input, and may return a value as output. Strings are sequences of characters which can be manipulated, and String functions are built-in functions that can manipulate strings in various ways. Such as finding the length of a string, searching for a specific character or substring, replacing characters, and converting the case of characters. PHP Basics PHP is an interpreted language executed on the server-side, where scripts are parsed at runtime rather than compiled beforehand. The source code is not visible to the client, and various built-in functions allow for fast development. PHP is compatible with many popular databases and is structurally similar to C/C++. PHP supports both procedural and object-oriented paradigms, and all PHP statements end with a semi-colon. All PHP scripts are enclosed in the reserved &amp;lt;?php tag. PHP variables must begin with a “$” sign and are case-sensitive, with certain variable names reserved by PHP, including form variables ($_POST, $_GET), server variables ($_SERVER), etc. The echo command echo is a PHP command used to output the parameters passed to it to the client’s web-browser. Arithemtic Operations Arithmetic operations are possible with PHP variables, including addition, subtraction, multiplication, and division. Concatenation You can concatenate multiple strings using a period to join them into one. For example: $example = &quot;Hello&quot; . &quot; &quot; . &quot;World&quot;; String escapes To display double quotation marks within a string, use the \ [backslash] before the quotation marks to ignore and display them. Control Structures Control structures within PHP include conditional (branching) structures (e.g. if/else) and repetition structures (e.g. while loops). Functions Functions are defined as groups of statements that can be executed as a single unit. The syntax for defining a function is: function name_of_function(parameters) { statements; } Functions must be defined before they can be called, and function headers are of a specific format that does not include a return type. Function names are not case-sensitive, and the function statements must be contained within the function braces String Functions In PHP, string functions are used to manipulate strings, which are sequences of characters. There are various string functions available in PHP that can be used to manipulate strings. Some of the commonly used string functions include strlen(), which is used to find the length of a string; substr(), which is used to extract a portion of a string; str_replace(), which is used to replace a string with another string; and strtolower() and strtoupper(), which are used to convert a string to lowercase and uppercase, respectively. For example, strlen() can be used to find the length of a string as shown below: $string = &quot;Hello, World!&quot;; $length = strlen($string); echo &quot;The length of the string is $length.&quot;; // Output: The length of the string is 13. Assignment For this assignment I created a web form that lets you input a string and click a submit button. The application then uses the strlen() string function to calculate the string’s length and return it back to the user. Here’s the code I used to accomplish this: &amp;lt;?php function getStringLength($string) { return strlen($string); } $string = isset($_GET['string']) ? $_GET['string'] : ''; // Defaults to an empty string if 'string' is not defined ?&amp;gt; And getStringLength() is called referenced in the body: &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Your String: &amp;lt;?php echo $string; ?&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;h2&amp;gt;Length of the string: &amp;lt;?php echo getStringLength($string); ?&amp;gt;&amp;lt;/h2&amp;gt; &amp;lt;form action=&quot;&quot; method=&quot;get&quot;&amp;gt; &amp;lt;label&amp;gt;New String:&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;text&quot; name=&quot;string&quot; value=&quot;&amp;lt;?php echo $string; ?&amp;gt;&quot;&amp;gt; &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt;</summary></entry><entry><title type="html">Web Design Technologies - Module #5 Blog</title><link href="https://blog.cmoo.rs/jekyll/update/2023/02/12/web-design-technologies-assignment-5.html" rel="alternate" type="text/html" title="Web Design Technologies - Module #5 Blog" /><published>2023-02-12T17:45:00+00:00</published><updated>2023-02-12T17:45:00+00:00</updated><id>https://blog.cmoo.rs/jekyll/update/2023/02/12/web-design-technologies-assignment-5</id><content type="html" xml:base="https://blog.cmoo.rs/jekyll/update/2023/02/12/web-design-technologies-assignment-5.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In module 5 we covered the basics of form validation and wireframes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Form validation&lt;/em&gt; is used to determine if the data that a user inputs into a website is valid before submitting it for processing. For example, if a user is asked to enter their email address, and instead they enter a sequence of numbers, it’s likely that the data is invalid.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wireframes&lt;/em&gt; are useful to help visualize how a site will look before it’s built, it can also be used to plan with &lt;em&gt;clients&lt;/em&gt; and &lt;em&gt;stakeholders&lt;/em&gt; to ensure that the site will meet everyone’s needs.&lt;/p&gt;

&lt;h3 id=&quot;form-validation&quot;&gt;Form Validation&lt;/h3&gt;
&lt;p&gt;Form validation is possible via client-side JavaScript, to do validation you first need to assign what the user inputted to a variable, and then run a sequence of comparisons against that variable. For example, if you want to check that a field wasn’t left blank, you can use the following code:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Please enter your name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Name detected&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Or, for a more complex example of form validation is where we want to validate that a user has inputted a valid email address. We can use Regex to check if the input matches the expected format:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-zA-Z0-9._-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+@&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-zA-Z0-9.-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-zA-Z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{2,4}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;You have entered a valid email address.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Invalid email address detected, please try again&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wireframes&quot;&gt;Wireframes&lt;/h3&gt;
&lt;p&gt;Wireframes are pre-built mockups of an website or application that give a “clear overview of the page structure, layout, information architecture, user flow, functionality, and intended behaviors.”&lt;sup&gt;&lt;a href=&quot;https://careerfoundry.com/en/blog/ux-design/what-is-a-wireframe-guide/&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;They are useful for planning the layout of a project before it’s built, and can help communicate the intended design to clients and stakeholders. While there are many purpose-built tools for creating wireframes, such as Balsamiq and Adobe XD, it’s possible to create a wireframe in almost any visual editor. I often use Adobe Photoshop or MS Paint if I need to quickly create a wireframe.&lt;/p&gt;

&lt;h3 id=&quot;assignment&quot;&gt;Assignment&lt;/h3&gt;
&lt;p&gt;For the first part of this assignment in this module I created a website that lets the user send me a message. The form has validation to ensure that the user has inputted a name, valid email address, valid phone number, and a message. If the user doesn’t input the information as expected, they will be alerted that there is an error and asked to try again. Otherwise, the user will be alerted that the message was sent successfully with a summary of what was sent. The site is available &lt;a href=&quot;http://cmusf-lis4365.epizy.com/module_5/?i=1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the second part of the assignment I created a wireframe for an example website. I decided to make a document-sharing website as I felt that it provides a good example of a web-application, and I think that it will actually be possible to implement in later modules where we cover PHP. I created the wireframe in Adobe Photoshop, where each section of the page is split into groups, and each group contains layers that contain the elements of that section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Wireframe%20Layout.png&quot; alt=&quot;Wireframe&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Introduction In module 5 we covered the basics of form validation and wireframes. Form validation is used to determine if the data that a user inputs into a website is valid before submitting it for processing. For example, if a user is asked to enter their email address, and instead they enter a sequence of numbers, it’s likely that the data is invalid. Wireframes are useful to help visualize how a site will look before it’s built, it can also be used to plan with clients and stakeholders to ensure that the site will meet everyone’s needs. Form Validation Form validation is possible via client-side JavaScript, to do validation you first need to assign what the user inputted to a variable, and then run a sequence of comparisons against that variable. For example, if you want to check that a field wasn’t left blank, you can use the following code: var name = document.getElementById(&quot;name&quot;).value; if (name == &quot;&quot;) { alert(&quot;Please enter your name&quot;); } else { alert(&quot;Name detected&quot;) } Or, for a more complex example of form validation is where we want to validate that a user has inputted a valid email address. We can use Regex to check if the input matches the expected format: var email = document.getElementById(&quot;email&quot;).value; if (email.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/)) { alert(&quot;You have entered a valid email address.&quot;); } else { alert(&quot;Invalid email address detected, please try again&quot;); } Wireframes Wireframes are pre-built mockups of an website or application that give a “clear overview of the page structure, layout, information architecture, user flow, functionality, and intended behaviors.”1 They are useful for planning the layout of a project before it’s built, and can help communicate the intended design to clients and stakeholders. While there are many purpose-built tools for creating wireframes, such as Balsamiq and Adobe XD, it’s possible to create a wireframe in almost any visual editor. I often use Adobe Photoshop or MS Paint if I need to quickly create a wireframe. Assignment For the first part of this assignment in this module I created a website that lets the user send me a message. The form has validation to ensure that the user has inputted a name, valid email address, valid phone number, and a message. If the user doesn’t input the information as expected, they will be alerted that there is an error and asked to try again. Otherwise, the user will be alerted that the message was sent successfully with a summary of what was sent. The site is available here. For the second part of the assignment I created a wireframe for an example website. I decided to make a document-sharing website as I felt that it provides a good example of a web-application, and I think that it will actually be possible to implement in later modules where we cover PHP. I created the wireframe in Adobe Photoshop, where each section of the page is split into groups, and each group contains layers that contain the elements of that section.</summary></entry><entry><title type="html">Web Design Technologies - Module #4 Blog</title><link href="https://blog.cmoo.rs/jekyll/update/2023/02/05/web-design-technologies-assignment-4.html" rel="alternate" type="text/html" title="Web Design Technologies - Module #4 Blog" /><published>2023-02-05T19:45:00+00:00</published><updated>2023-02-05T19:45:00+00:00</updated><id>https://blog.cmoo.rs/jekyll/update/2023/02/05/web-design-technologies-assignment-4</id><content type="html" xml:base="https://blog.cmoo.rs/jekyll/update/2023/02/05/web-design-technologies-assignment-4.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In module 4 we covered conditionals, regex, arrays, and ways to interact with the user in JavaScript. We also went deeper into Photoshop, and covered how to use the “Export for Web” feature to create optimized images for the web.&lt;/p&gt;

&lt;h3 id=&quot;conditionals&quot;&gt;Conditionals&lt;/h3&gt;
&lt;p&gt;In JavaScript conditionals are used to control the flow of code execution. They are used to check whether conditions are true or false and execute code based on the output. Within JavaScript, the most popular conditionals are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;else if&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;else&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Code to execute if condition is true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;otherCondition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Code to execute if condition is true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Code to execute if all conditions are false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;regular-expressions-regex&quot;&gt;Regular Expressions (Regex)&lt;/h3&gt;
&lt;p&gt;Regular expressions can be used to match patterns on strings. While not specific to JavaScript, they are heavily integrated into the language. Regex can be used to validate user input, extract information from text, or replace text within a string.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Expression to match phone numbers in the format ###-###-####&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;phoneRegex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{3}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{3}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{4}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Expression to match email addresses&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emailRegex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-zA-Z0-9_&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\-\.]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;((\[[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{1,3}\.[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{1,3}\.[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{1,3}\.)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;(([&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-zA-Z0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\-]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;))([&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-zA-Z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{2,4}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]{1,3})(\]?)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Enter your phone number or email address&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;phoneRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;You entered a valid phone number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emailRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;You entered a valid email address&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;You have not entered either a phone number or an email address&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;script&gt;
function testValidateInput() {
  const input = prompt(&quot;Enter some text: &quot;)
  const phoneRegex = /^\d{3}-\d{3}-\d{4}$/;
  const emailRegex = /^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
  if (phoneRegex.test(input)) {
    alert(&quot;You entered a valid phone number&quot;);
  } else if (emailRegex.test(input)) {
    alert(&quot;You entered a valid email address&quot;);
  } else {
    alert(&quot;You have not entered either a phone number or an email address&quot;);
  }
}
&lt;/script&gt;

&lt;p&gt;You can test the regex expressions above by clicking the button below:
&lt;button onclick=&quot;testValidateInput()&quot;&gt;Test Validate Input&lt;/button&gt;&lt;/p&gt;

&lt;h3 id=&quot;arrays&quot;&gt;Arrays&lt;/h3&gt;
&lt;p&gt;In JavaScript, arrays are used to store lists of data. They can be used to store numbers, strings, objects, or even other arrays. Arrays can be accessed by their “index”, which denotes the position of an element. The first element starts at 0, the second is at index 1, and so on.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Create an array of numbers&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create an array of strings&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Second&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Third&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create an array of objects&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Web&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Design&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Technologies&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create an array of arrays (also known as a 2D array)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayOfArrays&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;objects&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;user-interaction&quot;&gt;User Interaction&lt;/h3&gt;
&lt;p&gt;JavaScript provides multiple methods to gather information and display it to users. The built-in methods for gathering data are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prompt()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;confirm()&lt;/code&gt;. The built-in method to display data is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alert()&lt;/code&gt;. You can also create your own custom prompts and alerts using HTML and CSS with the DOM.&lt;/p&gt;

&lt;p&gt;HTML Code:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Please enter your name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nameInput&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;greeting&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Get the user's name&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;What is your name?&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Return a greeting to the user&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Use the DOM to greet the user&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nameInputElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;nameInput&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greetingElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;nameInputElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Hello &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nameInputElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;!`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;photoshop&quot;&gt;Photoshop&lt;/h3&gt;
&lt;p&gt;In Photoshop we covered how to use the “Export for Web” feature to create images optimized for hosting on websites.&lt;/p&gt;

&lt;p&gt;Photoshop offers a few presets for exporting images in this mode, they vary from formats like JPEG, PNG, and GIF, to different levels of compression and color depth.&lt;/p&gt;

&lt;p&gt;The “Export for Web” feature also allows you to customize your output file, including attribtues like the file format, dithering type, color depth, and level of compression. If applicable for the selected file format, it also lets you toggle the transparency of the image.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sfw1.png&quot; alt=&quot;Photoshop Export for Web&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For the image I chose, I found that the JPEG-Medium format presented the best size to quality ratio. The original image was 1.07 MB, after re-sizing and using the the JPEG-Medium preset, the export was reduced to 63.2 KB.&lt;/p&gt;

&lt;h3 id=&quot;assignment&quot;&gt;Assignment&lt;/h3&gt;
&lt;p&gt;For my assignment I chose to determine if the screen size was large enough to properly display content on the page. If the screen size was smaller than 500px, the site would warn the user that not all content may display properly, otherwise the user is told that their screen size is adequate.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;target&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Element that tells the user if their screen size is large enough&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Compare this to 500px to determine if the screen is large enough&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Set the text of the target element which the user sees&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;You are currently using a small window size, some elements may not load properly&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;You are using an adequate window size, all elements should display properly.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Introduction In module 4 we covered conditionals, regex, arrays, and ways to interact with the user in JavaScript. We also went deeper into Photoshop, and covered how to use the “Export for Web” feature to create optimized images for the web. Conditionals In JavaScript conditionals are used to control the flow of code execution. They are used to check whether conditions are true or false and execute code based on the output. Within JavaScript, the most popular conditionals are if, else if, and else. if (condition) { // Code to execute if condition is true } else if (otherCondition) { // Code to execute if condition is true } else { // Code to execute if all conditions are false } Regular Expressions (Regex) Regular expressions can be used to match patterns on strings. While not specific to JavaScript, they are heavily integrated into the language. Regex can be used to validate user input, extract information from text, or replace text within a string. // Expression to match phone numbers in the format ###-###-#### var phoneRegex = /^\d{3}-\d{3}-\d{4}$/; // Expression to match email addresses var emailRegex = /^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/; const input = prompt(&quot;Enter your phone number or email address&quot;); if (phoneRegex.test(input)) { alert(&quot;You entered a valid phone number&quot;); } else if (emailRegex.test(input)) { alert(&quot;You entered a valid email address&quot;); } else { alert(&quot;You have not entered either a phone number or an email address&quot;); } You can test the regex expressions above by clicking the button below: Test Validate Input Arrays In JavaScript, arrays are used to store lists of data. They can be used to store numbers, strings, objects, or even other arrays. Arrays can be accessed by their “index”, which denotes the position of an element. The first element starts at 0, the second is at index 1, and so on. // Create an array of numbers const numbers = [1, 2, 3, 4, 5, 7, 8, 9, 10]; // Create an array of strings const words = [&quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;]; // Create an array of objects const objects = [ { name: &quot;Web&quot;, value: 1 }, { name: &quot;Design&quot;, value: 2 }, { name: &quot;Technologies&quot;, value: 3 } ]; // Create an array of arrays (also known as a 2D array) const arrayOfArrays = [ numbers, words, objects ] User Interaction JavaScript provides multiple methods to gather information and display it to users. The built-in methods for gathering data are prompt() and confirm(). The built-in method to display data is alert(). You can also create your own custom prompts and alerts using HTML and CSS with the DOM. HTML Code: Please enter your name: &amp;lt;input id=&quot;nameInput&quot; /&amp;gt; &amp;lt;p id=&quot;greeting&quot;&amp;gt;&amp;lt;/p&amp;gt; // Get the user's name const name = prompt(&quot;What is your name?&quot;); // Return a greeting to the user alert(&quot;Hello &quot; + name + &quot;!&quot;); // Use the DOM to greet the user const nameInputElement = document.getElementById(&quot;nameInput&quot;); const greetingElement = document.getElementById(&quot;greeting&quot;); nameInputElement.value = `Hello ${nameInputElement.value}!`; Photoshop In Photoshop we covered how to use the “Export for Web” feature to create images optimized for hosting on websites. Photoshop offers a few presets for exporting images in this mode, they vary from formats like JPEG, PNG, and GIF, to different levels of compression and color depth. The “Export for Web” feature also allows you to customize your output file, including attribtues like the file format, dithering type, color depth, and level of compression. If applicable for the selected file format, it also lets you toggle the transparency of the image. For the image I chose, I found that the JPEG-Medium format presented the best size to quality ratio. The original image was 1.07 MB, after re-sizing and using the the JPEG-Medium preset, the export was reduced to 63.2 KB. Assignment For my assignment I chose to determine if the screen size was large enough to properly display content on the page. If the screen size was smaller than 500px, the site would warn the user that not all content may display properly, otherwise the user is told that their screen size is adequate. &amp;lt;p id=&quot;target&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;script&amp;gt; // Element that tells the user if their screen size is large enough var target = document.getElementById(&quot;target&quot;); // Compare this to 500px to determine if the screen is large enough if (screen.width &amp;lt; 500) { // Set the text of the target element which the user sees target.innerText = &quot;You are currently using a small window size, some elements may not load properly&quot;; } else { target.innerText = &quot;You are using an adequate window size, all elements should display properly.&quot;; } &amp;lt;/script&amp;gt;</summary></entry><entry><title type="html">Web Design Technologies - Module #3 Blog</title><link href="https://blog.cmoo.rs/jekyll/update/2023/01/29/web-design-technologies-assignment-3.html" rel="alternate" type="text/html" title="Web Design Technologies - Module #3 Blog" /><published>2023-01-29T19:45:00+00:00</published><updated>2023-01-29T19:45:00+00:00</updated><id>https://blog.cmoo.rs/jekyll/update/2023/01/29/web-design-technologies-assignment-3</id><content type="html" xml:base="https://blog.cmoo.rs/jekyll/update/2023/01/29/web-design-technologies-assignment-3.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In module 3 we reviewed CSS, went deeper into how JavaScript works, and covered how to properly create and optimize graphics for websites. We also covered the types of image file formats and their drawbacks/upsides.&lt;/p&gt;

&lt;h3 id=&quot;key-terms&quot;&gt;Key Terms&lt;/h3&gt;
&lt;p&gt;A few key terms to know from this module are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Resolution: The number of pixels within a bitmap image&lt;/li&gt;
  &lt;li&gt;Rasterization: The covnersion of vector images into bitmap images&lt;/li&gt;
  &lt;li&gt;Compression: The process of compressing an image to a smaller file-size
    &lt;ul&gt;
      &lt;li&gt;Lossless Compression: The image doesn’t loose any detail after being compressed&lt;/li&gt;
      &lt;li&gt;Lossy Compression: The image may loose some detail after being compressed&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bitmap-vs-vector-images&quot;&gt;Bitmap vs Vector Images&lt;/h3&gt;
&lt;p&gt;There are two major distinctions between image formats, &lt;em&gt;bitmap&lt;/em&gt; and &lt;em&gt;vector&lt;/em&gt; images. Bitmap images (such as JPEG, PNG, or GIF) are maps of the individual pixels that make up na image, while vector images (such as SVG and EPS) are defined by mathematical equations that come together to make up an image.&lt;/p&gt;

&lt;p&gt;Bitmap images are prefered for images of real-life or complex objects, such as a cat or a sweater. A vector image would be prefered for something more simple, such as a logo or a signature. Vector images are able to scale to any size, howevet bitmap images become more and more pixelated as you zoom in.&lt;/p&gt;

&lt;p&gt;While it’s possible to edit vector images in Photoshop, the prefered tool of choice is Adobe Illustrator. As stated in the course, Photoshop is used for retouching, image editing, color painting, and graphic design using images and pixels, while Adobe Illustrator is used for drawings with points, lines, and infills.&lt;/p&gt;

&lt;h3 id=&quot;assignment&quot;&gt;Assignment&lt;/h3&gt;
&lt;p&gt;The first part of this assignment covered a simple webpage which uses JavaScript to adds two numbers together. The variables and functions have been annotated with comments to explain what they do.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Defines an element to hold the final total --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Tells the browser there is JavaScript code to execute --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Assign the first price to add together to a variable called price1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Asssign the second price to add together to a variable called price2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Add the two prices together and assign the result to a variable called total&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Special identifier in JavaScript that refers to the HTML document&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Get the element with the ID &quot;demo&quot;, which was the first and only element defined earlier&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;The total is: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Set the text of the element to &quot;The total is: &quot; and the value of the total variable&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the assignment I will be creating an image using Adobe Photoshop, and comparing the different output formats for web use.&lt;/p&gt;

&lt;p&gt;It appears Photoshop includes presets for web images, so I’m going to start with the &lt;em&gt;“Web Most Common”&lt;/em&gt; preset at a resolution of 1366 x 768 px at 72 Pixels Per Inch (PPI).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photoshop-web-presets.png&quot; style=&quot;padding: 10px&quot; alt=&quot;Photoshop web presets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I changed the background contents to “Transparent” to make sure I can test the different file formats that do and don’t support transparency.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/photoshop-transparrent-image.png&quot; style=&quot;padding: 10px&quot; alt=&quot;Photoshop transparent background option selected&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was then greeted with an empty Artboard I could use to start editing my image. For this assignment I’m going to edit a picture of my cat onto &lt;a href=&quot;https://www.flickr.com/photos/giuseppemilo/37857351846/&quot;&gt;a picture of the Caltun River&lt;/a&gt; in Romania, taken by &lt;a href=&quot;https://www.flickr.com/photos/giuseppemilo/&quot;&gt;Giuseppe Milo&lt;/a&gt; under the Creative Commons Attribution 2.0 Generic license.&lt;/p&gt;

&lt;p&gt;Here’s a copy of the image I’m using:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/caltun-river-original.jpg&quot; style=&quot;padding: 10px&quot; alt=&quot;The original image of the Caltun River&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some basic information about the image is available:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Resolution: 2000 x 1125 px
File Size: 1246 kB
File Format: JPEG
Transparency: No
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;I then added my cat to the image, and saved it as a JPG:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/el_gato_discovers_the_beauties_of_romania.jpg&quot; style=&quot;padding: 10px&quot; alt=&quot;The image of the Caltun River with my cat added, saved as JPEG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using the default export settings, the image is now:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Resolution: 1366 x 768 px
File Size: 605 kB
File Format: JPEG
Transparency: No
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;I then saved the image as a PNG:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/el_gato_discovers_the_beauties_of_romania.png&quot; style=&quot;padding: 10px&quot; alt=&quot;The image of the Caltun River with my cat added, saved as a PNG&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Resolution: 1366 x 768 px
File Size: 2.7 MB
File Format: PNG
Transparency: Yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;p&gt;And finally, I saved the image as a GIF:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/el_gato_discovers_the_beauties_of_romania.gif&quot; style=&quot;padding: 10px&quot; alt=&quot;The image of the Caltun River with my cat added, saved as a GIF&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Resolution: 1366 x 768 px
File Size: 788 kB
File Format: GIF
Transparency: Yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;script&gt;
function changeBg() {
  if (document.body.style.backgroundColor === &quot;black&quot;) {
    // Set the background color to black
    document.body.style.backgroundColor = &quot;white&quot;;
    // Set the text color to white
    document.body.style.color = &quot;black&quot;;
  } else {
    // Set the background color to white
    document.body.style.backgroundColor = &quot;black&quot;;
    // Set the text color to black
    document.body.style.color = &quot;white&quot;;
  }
}
&lt;/script&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;As you can see, the PNG file is much larger than the ones exported as JPEG and GIF, this is because PNG does not support lossy compression and the image is that of high complexity. While the GIF file is slightly bigger than the JPEG by 183 kB, it supports transparency and is therefore a better choice for this image (as the sky has been photoshopped out of the image). Due to this blog having a white background by default it isn’t immediately apparent that the JPG doesn’t support transparency, however, if you were to click &lt;button onclick=&quot;changeBg()&quot;&gt;this&lt;/button&gt; to set the background to black, you can see that the JPG has a white background, while the PNG and GIF have a transparent background.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Introduction In module 3 we reviewed CSS, went deeper into how JavaScript works, and covered how to properly create and optimize graphics for websites. We also covered the types of image file formats and their drawbacks/upsides. Key Terms A few key terms to know from this module are: Resolution: The number of pixels within a bitmap image Rasterization: The covnersion of vector images into bitmap images Compression: The process of compressing an image to a smaller file-size Lossless Compression: The image doesn’t loose any detail after being compressed Lossy Compression: The image may loose some detail after being compressed Bitmap vs Vector Images There are two major distinctions between image formats, bitmap and vector images. Bitmap images (such as JPEG, PNG, or GIF) are maps of the individual pixels that make up na image, while vector images (such as SVG and EPS) are defined by mathematical equations that come together to make up an image. Bitmap images are prefered for images of real-life or complex objects, such as a cat or a sweater. A vector image would be prefered for something more simple, such as a logo or a signature. Vector images are able to scale to any size, howevet bitmap images become more and more pixelated as you zoom in. While it’s possible to edit vector images in Photoshop, the prefered tool of choice is Adobe Illustrator. As stated in the course, Photoshop is used for retouching, image editing, color painting, and graphic design using images and pixels, while Adobe Illustrator is used for drawings with points, lines, and infills. Assignment The first part of this assignment covered a simple webpage which uses JavaScript to adds two numbers together. The variables and functions have been annotated with comments to explain what they do. &amp;lt;!-- Defines an element to hold the final total --&amp;gt; &amp;lt;p id=&quot;demo&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;!-- Tells the browser there is JavaScript code to execute --&amp;gt; &amp;lt;script&amp;gt; // Assign the first price to add together to a variable called price1 var price1 = 5; // Asssign the second price to add together to a variable called price2 var price2 = 6; // Add the two prices together and assign the result to a variable called total var total = price1 + price2; document // Special identifier in JavaScript that refers to the HTML document .getElementById(&quot;demo&quot;) // Get the element with the ID &quot;demo&quot;, which was the first and only element defined earlier .innerHTML = &quot;The total is: &quot; + total; // Set the text of the element to &quot;The total is: &quot; and the value of the total variable &amp;lt;/script&amp;gt; For the assignment I will be creating an image using Adobe Photoshop, and comparing the different output formats for web use. It appears Photoshop includes presets for web images, so I’m going to start with the “Web Most Common” preset at a resolution of 1366 x 768 px at 72 Pixels Per Inch (PPI). I changed the background contents to “Transparent” to make sure I can test the different file formats that do and don’t support transparency. I was then greeted with an empty Artboard I could use to start editing my image. For this assignment I’m going to edit a picture of my cat onto a picture of the Caltun River in Romania, taken by Giuseppe Milo under the Creative Commons Attribution 2.0 Generic license. Here’s a copy of the image I’m using: Some basic information about the image is available: Resolution: 2000 x 1125 px File Size: 1246 kB File Format: JPEG Transparency: No I then added my cat to the image, and saved it as a JPG: Using the default export settings, the image is now: Resolution: 1366 x 768 px File Size: 605 kB File Format: JPEG Transparency: No I then saved the image as a PNG: Resolution: 1366 x 768 px File Size: 2.7 MB File Format: PNG Transparency: Yes And finally, I saved the image as a GIF: Resolution: 1366 x 768 px File Size: 788 kB File Format: GIF Transparency: Yes Conclusion As you can see, the PNG file is much larger than the ones exported as JPEG and GIF, this is because PNG does not support lossy compression and the image is that of high complexity. While the GIF file is slightly bigger than the JPEG by 183 kB, it supports transparency and is therefore a better choice for this image (as the sky has been photoshopped out of the image). Due to this blog having a white background by default it isn’t immediately apparent that the JPG doesn’t support transparency, however, if you were to click this to set the background to black, you can see that the JPG has a white background, while the PNG and GIF have a transparent background.</summary></entry><entry><title type="html">Web Design Technologies - Module #2 Assignment/Blog</title><link href="https://blog.cmoo.rs/jekyll/update/2023/01/19/web-design-technologies-assignment-2.html" rel="alternate" type="text/html" title="Web Design Technologies - Module #2 Assignment/Blog" /><published>2023-01-19T19:45:00+00:00</published><updated>2023-01-19T19:45:00+00:00</updated><id>https://blog.cmoo.rs/jekyll/update/2023/01/19/web-design-technologies-assignment-2</id><content type="html" xml:base="https://blog.cmoo.rs/jekyll/update/2023/01/19/web-design-technologies-assignment-2.html">&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In this module we covered the basics of HTML, CSS, and JavaScript, the resources we can used to find to debug and style our websites, and some code editors we can use to edit the sites.&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;Overall, not too much was new to me in this moudle, as one my  classes last semester involved creating web-pages in HTML/CSS. Instead of choosing an online template, I’ve made my own using the USF Green &amp;amp; Gold Colors, and then develop the web-page on that.&lt;/p&gt;

&lt;p&gt;The site is available &lt;a href=&quot;http://cmusf-lis4365.epizy.com/&quot;&gt;here&lt;/a&gt;. And the JavaScript test is available &lt;a href=&quot;http://cmusf-lis4365.epizy.com/module3.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Introduction In this module we covered the basics of HTML, CSS, and JavaScript, the resources we can used to find to debug and style our websites, and some code editors we can use to edit the sites. Overview Overall, not too much was new to me in this moudle, as one my classes last semester involved creating web-pages in HTML/CSS. Instead of choosing an online template, I’ve made my own using the USF Green &amp;amp; Gold Colors, and then develop the web-page on that. The site is available here. And the JavaScript test is available here</summary></entry><entry><title type="html">Web Design Technologies - Module #1 Assignment/Blog</title><link href="https://blog.cmoo.rs/jekyll/update/2023/01/06/web-design-technologies-assignment-1.html" rel="alternate" type="text/html" title="Web Design Technologies - Module #1 Assignment/Blog" /><published>2023-01-06T15:30:18+00:00</published><updated>2023-01-06T15:30:18+00:00</updated><id>https://blog.cmoo.rs/jekyll/update/2023/01/06/web-design-technologies-assignment-1</id><content type="html" xml:base="https://blog.cmoo.rs/jekyll/update/2023/01/06/web-design-technologies-assignment-1.html">&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Last semester I had taken a course in Web Page Design &amp;amp; Management, which covered the basics of creating a static webpage using HTML, CSS, and JavaScript. For the Spring semester of 2023 at USF, I’m taking a course in web-design technologies. Within this new course I’m looking forward to creating dynamic websites, using technologies such as PHP to render websites on the server-side before sending them to users.&lt;/p&gt;
&lt;hr /&gt;

&lt;h3&gt;Lessons Learned&lt;/h3&gt;
&lt;h4&gt;Web Design&lt;/h4&gt;
&lt;p&gt;Within the first module we covered some of the basics of web design, such as its history and the components that go into designing a web page. Some notable componenets include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTML Documents&lt;/li&gt;
  &lt;li&gt;HTML Tags / Elements
    &lt;ul&gt;
      &lt;li&gt;Formatting Tags&lt;/li&gt;
      &lt;li&gt;Interactive Tags&lt;/li&gt;
      &lt;li&gt;Empty Elements&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As well asexamples some of the most high-level HTML tags:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/common-html-tags.png&quot; alt=&quot;Common HTML Elements&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Which were used to create the following HTML:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Toner Cartridge Sales&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Toner Cartridge Sales&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Lexmark Toner Cartridges&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;lexmark_logo.gif&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;Model #&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;:LEX 1382100&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Compatibility&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;: Optra 4049/3112/3116&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Price&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;: $189.99&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&lt;/span&gt;Model #&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;:LEX 1380520&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Compatibility&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;:Lexmark 4019/4028/4029&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Price&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;:$209.00&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4&gt;Web Communication Protocols&lt;/h4&gt;
&lt;p&gt;Every web page on the internet is identified by a unique address known as a URL. A URL (Uniform Resource Locator) consists of many parts. For example, take the following URL:&lt;/p&gt;

&lt;center&gt;&lt;a href=&quot;https://www.google.com/search?q=Web%20Design&quot;&gt;https://www.google.com/search?q=Web Design&lt;/a&gt;&lt;/center&gt;

&lt;p&gt;The &lt;em&gt;protocol&lt;/em&gt; usesd to transfer the page contents can be seen at the start, in this case we are using &lt;b&gt;https://&lt;/b&gt;. HTTPS is the secure version of the HyperText Transfer Protocol (HTTP).&lt;/p&gt;

&lt;p&gt;Next the &lt;em&gt;subdomain&lt;/em&gt; is present, in the case of Google’s search engine the default subdomain is &lt;strong&gt;www.&lt;/strong&gt;, which stands for “World Wide Web”. While a subdomain is not nessecary to access a website, because the world-wide-web was invented after the internet, some websites used a “WWW” prefix to prevent confusion between different internet technologies.&lt;sup&gt;&lt;a href=&quot;https://www.quora.com/Why-does-every-website-address-start-with-www&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; Different subdomains can be used to denote different information systems under the same domain.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;domain&lt;/em&gt; is defined as “google.com”, this denotes a simple, human-readable and rememberable string that allows users to visit the site. It also tells the web-browser the server to connect to in order to retrieve the requested content.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;resource&lt;/em&gt; we are attempting to access on Google’s server is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/search&lt;/code&gt; page. This page is dynamically generated and returns results according to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q=Web Design&lt;/code&gt; &lt;em&gt;query&lt;/em&gt;.&lt;/p&gt;
&lt;hr /&gt;

&lt;h4&gt;Communication&lt;/h4&gt;
&lt;p&gt;Once the browser knows the sub-domain and domain the user would like to request a resource from, it contacts a Domain Name System (DNS) server to resolve an IP address the computer can communicate to. Depending on the protocol used, the browser will connect to the webserver on port 80 (HTTP) or 443 (HTTPS) over TCP, a.k.a the Transmission Control Protocol.&lt;/p&gt;

&lt;p&gt;The browser sends a payload resembling the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /search?q=Web%20Design HTTP/1.1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36
Host: www.google.com
Accept-Language: en-us
Accept-Encoding: gzip, deflate
Connection: Keep-Alive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;small&gt;&lt;i&gt;Note that with HTTPS this data would be encrypted&lt;/i&gt;&lt;/small&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Which gives Google the relevant information to serve you the correct page, and format it properly for your browser as nessecary. Google uses this information on it’s &lt;em&gt;backend&lt;/em&gt; to query it’s database for information, and then responds to your browser so resulting information is shown on the &lt;em&gt;frontend&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;Server Side Rendering vs Client Side Rendering&lt;/h4&gt;

&lt;p&gt;In order to display the relevant data to the user, it must be converted from it’s raw form into something human-readable. To do this, the backend can use a programming language such as Perl or PHP to render &lt;em&gt;HTML&lt;/em&gt; which the browser can then display, or, the browser can request the raw data and render it locally using &lt;em&gt;client-side scripting&lt;/em&gt; known as &lt;em&gt;JavaScript&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This arcitecture can be broken down into 3 tiers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Client Tier
    &lt;ul&gt;
      &lt;li&gt;Handles user interface display (the Web Browser) and sends data to the processing teir&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Processing Tier
    &lt;ul&gt;
      &lt;li&gt;Handles interaction between the Client Tier and Data Storage Tier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Data Storage Tier
    &lt;ul&gt;
      &lt;li&gt;Stores the data in a database and can be queried by the processing tier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With server-side rendering the processing tier and data-storage tier are hosted on the same server, however, with client-side rendering, the client tier and processing tier are processed within the browser.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;PHP&lt;/h4&gt;
&lt;p&gt;One of the most popular server-side scripting languages is &lt;em&gt;PHP&lt;/em&gt;, PHP is a HyperText Preprocessor that runs on the server hosting a webpage. While it’s typically faster than client-side rendering, once the page has been fully loaded, the resource is unable to manipulate the webpage as is possible with Javascript.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4&gt;MySQL&lt;/h4&gt;

&lt;p&gt;MySQL is a structured relational database management system (RDBMS). Due to its integrations with PHP and Perl it’s often a go-to choice for storing data within an information system. While MySQL is paid software, an open-source fork of MySQL, MariaDB, is available for free public and commercial use.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;Assigment&lt;/h3&gt;

&lt;p&gt;For the first assigment in my LIS 4365 Web Design Technologies class, we are creating an account with &lt;a href=&quot;https://infinityfree.net/&quot;&gt;InfinityFree&lt;/a&gt;. Infinityfree is described as a platform that “… offers free web hosting with impressive marketing of unlimited disk space, bandwidth, and domain hosting.&lt;sup&gt;&lt;a href=&quot;https://digital.com/best-web-hosting/is-it-really-free/&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;”&lt;/p&gt;

&lt;p&gt;Unforunately, when I attempted to create an account using my school email, the verification link didn’t seem to come through. However, I know that I’ve used this service in the past, and sure enough after taking a few guesses at my username, my personal email was still linked to an account.&lt;/p&gt;

&lt;p&gt;I was able to create my new website on InfinityFree &lt;a href=&quot;http://cmusf-lis4365.epizy.com/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Introduction Last semester I had taken a course in Web Page Design &amp;amp; Management, which covered the basics of creating a static webpage using HTML, CSS, and JavaScript. For the Spring semester of 2023 at USF, I’m taking a course in web-design technologies. Within this new course I’m looking forward to creating dynamic websites, using technologies such as PHP to render websites on the server-side before sending them to users. Lessons Learned Web Design Within the first module we covered some of the basics of web design, such as its history and the components that go into designing a web page. Some notable componenets include: HTML Documents HTML Tags / Elements Formatting Tags Interactive Tags Empty Elements As well asexamples some of the most high-level HTML tags: Which were used to create the following HTML: &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Toner Cartridge Sales&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Toner Cartridge Sales&amp;lt;/h1&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;h2&amp;gt;Lexmark Toner Cartridges&amp;lt;/h2&amp;gt; &amp;lt;img src=&quot;lexmark_logo.gif&quot;&amp;gt; &amp;lt;p&amp;gt;&amp;lt;b&amp;gt;Model #&amp;lt;/b&amp;gt;:LEX 1382100&amp;lt;br&amp;gt; &amp;lt;b&amp;gt;Compatibility&amp;lt;/b&amp;gt;: Optra 4049/3112/3116&amp;lt;br&amp;gt; &amp;lt;b&amp;gt;Price&amp;lt;/b&amp;gt;: $189.99&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;b&amp;gt;Model #&amp;lt;/b&amp;gt;:LEX 1380520&amp;lt;br&amp;gt; &amp;lt;b&amp;gt;Compatibility&amp;lt;/b&amp;gt;:Lexmark 4019/4028/4029&amp;lt;br&amp;gt; &amp;lt;b&amp;gt;Price&amp;lt;/b&amp;gt;:$209.00&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Web Communication Protocols Every web page on the internet is identified by a unique address known as a URL. A URL (Uniform Resource Locator) consists of many parts. For example, take the following URL: https://www.google.com/search?q=Web Design The protocol usesd to transfer the page contents can be seen at the start, in this case we are using https://. HTTPS is the secure version of the HyperText Transfer Protocol (HTTP). Next the subdomain is present, in the case of Google’s search engine the default subdomain is www., which stands for “World Wide Web”. While a subdomain is not nessecary to access a website, because the world-wide-web was invented after the internet, some websites used a “WWW” prefix to prevent confusion between different internet technologies.2 Different subdomains can be used to denote different information systems under the same domain. The domain is defined as “google.com”, this denotes a simple, human-readable and rememberable string that allows users to visit the site. It also tells the web-browser the server to connect to in order to retrieve the requested content. The resource we are attempting to access on Google’s server is the /search page. This page is dynamically generated and returns results according to the q=Web Design query. Communication Once the browser knows the sub-domain and domain the user would like to request a resource from, it contacts a Domain Name System (DNS) server to resolve an IP address the computer can communicate to. Depending on the protocol used, the browser will connect to the webserver on port 80 (HTTP) or 443 (HTTPS) over TCP, a.k.a the Transmission Control Protocol. The browser sends a payload resembling the following: GET /search?q=Web%20Design HTTP/1.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Host: www.google.com Accept-Language: en-us Accept-Encoding: gzip, deflate Connection: Keep-Alive Note that with HTTPS this data would be encrypted Which gives Google the relevant information to serve you the correct page, and format it properly for your browser as nessecary. Google uses this information on it’s backend to query it’s database for information, and then responds to your browser so resulting information is shown on the frontend. Server Side Rendering vs Client Side Rendering In order to display the relevant data to the user, it must be converted from it’s raw form into something human-readable. To do this, the backend can use a programming language such as Perl or PHP to render HTML which the browser can then display, or, the browser can request the raw data and render it locally using client-side scripting known as JavaScript. This arcitecture can be broken down into 3 tiers: Client Tier Handles user interface display (the Web Browser) and sends data to the processing teir Processing Tier Handles interaction between the Client Tier and Data Storage Tier Data Storage Tier Stores the data in a database and can be queried by the processing tier With server-side rendering the processing tier and data-storage tier are hosted on the same server, however, with client-side rendering, the client tier and processing tier are processed within the browser. PHP One of the most popular server-side scripting languages is PHP, PHP is a HyperText Preprocessor that runs on the server hosting a webpage. While it’s typically faster than client-side rendering, once the page has been fully loaded, the resource is unable to manipulate the webpage as is possible with Javascript. MySQL MySQL is a structured relational database management system (RDBMS). Due to its integrations with PHP and Perl it’s often a go-to choice for storing data within an information system. While MySQL is paid software, an open-source fork of MySQL, MariaDB, is available for free public and commercial use. Assigment For the first assigment in my LIS 4365 Web Design Technologies class, we are creating an account with InfinityFree. Infinityfree is described as a platform that “… offers free web hosting with impressive marketing of unlimited disk space, bandwidth, and domain hosting.1” Unforunately, when I attempted to create an account using my school email, the verification link didn’t seem to come through. However, I know that I’ve used this service in the past, and sure enough after taking a few guesses at my username, my personal email was still linked to an account. I was able to create my new website on InfinityFree here.</summary></entry></feed>
